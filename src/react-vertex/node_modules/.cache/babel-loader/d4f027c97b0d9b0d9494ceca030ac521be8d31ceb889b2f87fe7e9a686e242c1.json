{"ast":null,"code":"import _objectSpread from \"/Users/sophia/Desktop/westcliff2/w7d1lab/react-vertex-sphere-of-spheres-forked/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/sophia/Desktop/westcliff2/w7d1lab/react-vertex-sphere-of-spheres-forked/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/sophia/Desktop/westcliff2/w7d1lab/react-vertex-sphere-of-spheres-forked/src/Spheres.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTexture2d } from \"@react-vertex/core\";\nimport { usePhongTextured } from \"@react-vertex/material-hooks\";\nimport { useSphereElements } from \"@react-vertex/geometry-hooks\";\nimport tiles from \"./abstract.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spheres(_ref) {\n  _s();\n  var _this = this;\n  var layoutRadius = _ref.layoutRadius,\n    sphereCount = _ref.sphereCount,\n    sphereRadius = _ref.sphereRadius;\n  var _useTexture2d = useTexture2d(tiles),\n    _useTexture2d2 = _slicedToArray(_useTexture2d, 1),\n    texture = _useTexture2d2[0];\n  var program = usePhongTextured(texture, 0.1);\n  var sphere = useSphereElements(sphereRadius, 20, 20);\n  var positions = useMemo(function () {\n    var result = [];\n    for (var i = 0; i < sphereCount; i++) {\n      var a = Math.acos(-1 + 2 * i / sphereCount);\n      var b = Math.sqrt((sphereCount - 1) * Math.PI) * a;\n      result.push([layoutRadius * Math.cos(b) * Math.sin(a), layoutRadius * Math.sin(b) * Math.sin(a), layoutRadius * Math.cos(a)]);\n    }\n    return result;\n  }, [sphereCount, layoutRadius]);\n  return /*#__PURE__*/_jsxDEV(\"material\", {\n    program: program,\n    children: positions.map(function (position, idx) {\n      return /*#__PURE__*/_jsxDEV(\"geometry\", _objectSpread({\n        position: position\n      }, sphere), idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Spheres, \"CGrqdehuVdkbC0h1snCkM2W6/CQ=\", false, function () {\n  return [useTexture2d, usePhongTextured, useSphereElements];\n});\n_c = Spheres;\nSpheres.propTypes = {\n  sphereCount: PropTypes.number.isRequired,\n  sphereRadius: PropTypes.number.isRequired,\n  layoutRadius: PropTypes.number.isRequired\n};\nexport default Spheres;\nvar _c;\n$RefreshReg$(_c, \"Spheres\");","map":{"version":3,"names":["React","useMemo","PropTypes","useTexture2d","usePhongTextured","useSphereElements","tiles","jsxDEV","_jsxDEV","Spheres","_ref","_s","_this","layoutRadius","sphereCount","sphereRadius","_useTexture2d","_useTexture2d2","_slicedToArray","texture","program","sphere","positions","result","i","a","Math","acos","b","sqrt","PI","push","cos","sin","children","map","position","idx","_objectSpread","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","$RefreshReg$"],"sources":["/Users/sophia/Desktop/westcliff2/w7d1lab/react-vertex-sphere-of-spheres-forked/src/Spheres.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTexture2d } from \"@react-vertex/core\";\nimport { usePhongTextured } from \"@react-vertex/material-hooks\";\nimport { useSphereElements } from \"@react-vertex/geometry-hooks\";\nimport tiles from \"./abstract.jpg\";\n\nfunction Spheres({ layoutRadius, sphereCount, sphereRadius }) {\n  const [texture] = useTexture2d(tiles);\n  const program = usePhongTextured(texture, 0.1);\n  const sphere = useSphereElements(sphereRadius, 20, 20);\n\n  const positions = useMemo(() => {\n    const result = [];\n\n    for (let i = 0; i < sphereCount; i++) {\n      const a = Math.acos(-1 + (2 * i) / sphereCount);\n      const b = Math.sqrt((sphereCount - 1) * Math.PI) * a;\n\n      result.push([\n        layoutRadius * Math.cos(b) * Math.sin(a),\n        layoutRadius * Math.sin(b) * Math.sin(a),\n        layoutRadius * Math.cos(a)\n      ]);\n    }\n\n    return result;\n  }, [sphereCount, layoutRadius]);\n\n  return (\n    <material program={program}>\n      {positions.map((position, idx) => (\n        <geometry key={idx} position={position} {...sphere} />\n      ))}\n    </material>\n  );\n}\n\nSpheres.propTypes = {\n  sphereCount: PropTypes.number.isRequired,\n  sphereRadius: PropTypes.number.isRequired,\n  layoutRadius: PropTypes.number.isRequired\n};\n\nexport default Spheres;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,OAAOA,CAAAC,IAAA,EAA8C;EAAAC,EAAA;EAAA,IAAAC,KAAA;EAAA,IAA3CC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IAAEC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IAAEC,YAAY,GAAAL,IAAA,CAAZK,YAAY;EACxD,IAAAC,aAAA,GAAkBb,YAAY,CAACG,KAAK,CAAC;IAAAW,cAAA,GAAAC,cAAA,CAAAF,aAAA;IAA9BG,OAAO,GAAAF,cAAA;EACd,IAAMG,OAAO,GAAGhB,gBAAgB,CAACe,OAAO,EAAE,GAAG,CAAC;EAC9C,IAAME,MAAM,GAAGhB,iBAAiB,CAACU,YAAY,EAAE,EAAE,EAAE,EAAE,CAAC;EAEtD,IAAMO,SAAS,GAAGrB,OAAO,CAAC,YAAM;IAC9B,IAAMsB,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,WAAW,EAAEU,CAAC,EAAE,EAAE;MACpC,IAAMC,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAAI,CAAC,GAAGH,CAAC,GAAIV,WAAW,CAAC;MAC/C,IAAMc,CAAC,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACf,WAAW,GAAG,CAAC,IAAIY,IAAI,CAACI,EAAE,CAAC,GAAGL,CAAC;MAEpDF,MAAM,CAACQ,IAAI,CAAC,CACVlB,YAAY,GAAGa,IAAI,CAACM,GAAG,CAACJ,CAAC,CAAC,GAAGF,IAAI,CAACO,GAAG,CAACR,CAAC,CAAC,EACxCZ,YAAY,GAAGa,IAAI,CAACO,GAAG,CAACL,CAAC,CAAC,GAAGF,IAAI,CAACO,GAAG,CAACR,CAAC,CAAC,EACxCZ,YAAY,GAAGa,IAAI,CAACM,GAAG,CAACP,CAAC,CAAC,CAC3B,CAAC;IACJ;IAEA,OAAOF,MAAM;EACf,CAAC,EAAE,CAACT,WAAW,EAAED,YAAY,CAAC,CAAC;EAE/B,oBACEL,OAAA;IAAUY,OAAO,EAAEA,OAAQ;IAAAc,QAAA,EACxBZ,SAAS,CAACa,GAAG,CAAC,UAACC,QAAQ,EAAEC,GAAG;MAAA,oBAC3B7B,OAAA,aAAA8B,aAAA;QAAoBF,QAAQ,EAAEA;MAAS,GAAKf,MAAM,GAAnCgB,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAA9B,KAAmC,CAAC;IAAA,CACvD;EAAC;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf;AAAC/B,EAAA,CA7BQF,OAAO;EAAA,QACIN,YAAY,EACdC,gBAAgB,EACjBC,iBAAiB;AAAA;AAAAsC,EAAA,GAHzBlC,OAAO;AA+BhBA,OAAO,CAACmC,SAAS,GAAG;EAClB9B,WAAW,EAAEZ,SAAS,CAAC2C,MAAM,CAACC,UAAU;EACxC/B,YAAY,EAAEb,SAAS,CAAC2C,MAAM,CAACC,UAAU;EACzCjC,YAAY,EAAEX,SAAS,CAAC2C,MAAM,CAACC;AACjC,CAAC;AAED,eAAerC,OAAO;AAAC,IAAAkC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}